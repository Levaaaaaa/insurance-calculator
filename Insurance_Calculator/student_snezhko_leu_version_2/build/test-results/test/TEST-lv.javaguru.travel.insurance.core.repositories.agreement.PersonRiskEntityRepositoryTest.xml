<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2024-12-14T13:47:49" hostname="DESKTOP-MNGQN6P" time="0.024">
  <properties/>
  <testcase name="incorrectPersonTest()" classname="lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest" time="0.005"/>
  <testcase name="incorrectIcTest()" classname="lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest" time="0.005"/>
  <testcase name="correctIcAndPerson()" classname="lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest" time="0.009"/>
  <testcase name="isRepositoryExists()" classname="lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest" time="0.002"/>
  <system-out><![CDATA[2024-12-14 16:47:49,142 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest]: PersonRiskEntityRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-12-14 16:47:49,147 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration lv.javaguru.travel.insurance.InsuranceApplication for test class lv.javaguru.travel.insurance.core.repositories.agreement.PersonRiskEntityRepositoryTest
Hibernate: select pred1_0.id,pred1_0.person,pred1_0.premium,pred1_0.risk_ic from person_risks pred1_0 left join agreement_persons p1_0 on p1_0.id=pred1_0.person where pred1_0.risk_ic=? and p1_0.id=?
Hibernate: select pred1_0.id,pred1_0.person,pred1_0.premium,pred1_0.risk_ic from person_risks pred1_0 left join agreement_persons p1_0 on p1_0.id=pred1_0.person where pred1_0.risk_ic=? and p1_0.id=?
Hibernate: select pred1_0.id,pred1_0.person,pred1_0.premium,pred1_0.risk_ic from person_risks pred1_0 left join agreement_persons p1_0 on p1_0.id=pred1_0.person where pred1_0.risk_ic=? and p1_0.id=?
Hibernate: select aped1_0.id,aped1_0.agreement,a1_0.id,a1_0.cost,a1_0.country,a1_0.date_from,a1_0.date_to,a1_0.premium,a1_0.uuid,aped1_0.medical_risk_limit_level,aped1_0.person,p1_0.id,p1_0.birth_date,p1_0.first_name,p1_0.ic,p1_0.last_name,aped1_0.person_medical_status,aped1_0.premium from agreement_persons aped1_0 join agreements a1_0 on a1_0.id=aped1_0.agreement join persons p1_0 on p1_0.id=aped1_0.person where aped1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
